<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminalselection on Gharib Personal Blog</title>
    <link>https://ghariib.ir/tags/terminalselection/</link>
    <description>Recent content in Terminalselection on Gharib Personal Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Alireza Gharib. All right reserved</copyright>
    <lastBuildDate>Thu, 23 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ghariib.ir/tags/terminalselection/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Modernizing legacy code with GitHub Copilot: Tips and examples</title>
      <link>https://ghariib.ir/posts/modernizing-legacy-code-with-github-copilot-tips-and-examples/</link>
      <pubDate>Thu, 23 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/modernizing-legacy-code-with-github-copilot-tips-and-examples/</guid>
      <description>&lt;p&gt;Learn how to modernize legacy code with GitHub Copilot with real-world examples.&lt;/p&gt;&#xA;&lt;p&gt;The post Modernizing legacy code with GitHub Copilot: Tips and examples appeared first on The GitHub Blog.&lt;/p&gt;&#xA;&lt;p&gt;Let’s talk about legacy code—you know, the code that’s old enough to drive and definitely old enough to haunt your dreams. Maybe it’s a sprawling COBOL system or an early version of C++ written back when “Y2K” was a serious concern. Now, decades later, you’re being asked to “look into it” and modernize it (while wondering if you need to send a note to that person who retired a few years ago and may know how this thing works).&lt;/p&gt;</description>
    </item>
    <item>
      <title>How we built the GitHub Skyline CLI extension using GitHub</title>
      <link>https://ghariib.ir/posts/how-we-built-the-github-skyline-cli-extension-using-github/</link>
      <pubDate>Fri, 17 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/how-we-built-the-github-skyline-cli-extension-using-github/</guid>
      <description>&lt;p&gt;GitHub uses GitHub to build GitHub, and our CLI extensions are no exception. Read on to find out how we built the GitHub Skyline CLI extension using GitHub!&lt;/p&gt;&#xA;&lt;p&gt;The post How we built the GitHub Skyline CLI extension using GitHub appeared first on The GitHub Blog.&lt;/p&gt;&#xA;&lt;p&gt;In December 2024, we announced gh-skyline, a GitHub CLI extension that allows our developer community to generate a 3D version of their GitHub Contribution Graph into an STL file ready for printing on a 3D printer, just in time to capture all of those contributions!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

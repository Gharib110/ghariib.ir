<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>S2n-Quic on Gharib Personal Blog</title>
    <link>https://ghariib.ir/tags/s2n-quic/</link>
    <description>Recent content in S2n-Quic on Gharib Personal Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Alireza Gharib. All right reserved</copyright>
    <lastBuildDate>Sun, 05 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ghariib.ir/tags/s2n-quic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enable post-quantum key exchange in QUIC with the s2n-quic library</title>
      <link>https://ghariib.ir/posts/enable-post-quantum-key-exchange-in-quic-with-the-s2n-quic-library/</link>
      <pubDate>Sun, 05 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/enable-post-quantum-key-exchange-in-quic-with-the-s2n-quic-library/</guid>
      <description>&lt;p&gt;January 25, 2023: AWS KMS, ACM, Secrets Manager TLS endpoints have been updated to only support NIST’s Round 3 picked KEM, Kyber. s2n-tls and s2n-quic have also been updated to only support Kyber. BIKE or other KEMs may still be added as the standardization proceeds. At Amazon Web Services (AWS) we prioritize security, performance, and […]&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;January 25, 2023:&lt;/strong&gt; AWS KMS, ACM, Secrets Manager TLS endpoints have been updated to only support NIST’s Round 3 picked KEM, Kyber. s2n-tls and s2n-quic have also been updated to only support Kyber. BIKE or other KEMs may still be added as the standardization proceeds.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introducing s2n-quic, a new open-source QUIC protocol implementation in Rust</title>
      <link>https://ghariib.ir/posts/introducing-s2n-quic-a-new-open-source-quic-protocol-implementation-in-rust/</link>
      <pubDate>Sun, 05 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/introducing-s2n-quic-a-new-open-source-quic-protocol-implementation-in-rust/</guid>
      <description>&lt;p&gt;At Amazon Web Services (AWS), security, high performance, and strong encryption for everyone are top priorities for all our services. With these priorities in mind, less than a year after QUIC ratification in the Internet Engineering Task Force (IETF), we are introducing support for the QUIC protocol which can boost performance for web applications that […]&lt;/p&gt;&#xA;&lt;p&gt;&#xD;&#xA;&lt;figure&gt;&#xD;&#xA;  &lt;img src=&#34;https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2022/02/17/S2N-QUIC-Blog-Announcement-Logo.png&#34; alt=&#34;&#34; /&gt;&#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;At Amazon Web Services (AWS), security, high performance, and strong encryption for everyone are top priorities for all our services. With these priorities in mind, less than a year after QUIC ratification in the Internet Engineering Task Force (IETF), we are introducing support for the QUIC protocol which can boost performance for web applications that currently use Transport Layer Security (TLS) over Transmission Control Protocol (TCP). We are pleased to announce the availability of s2n-quic, an open-source Rust implementation of the QUIC protocol added to our set of AWS encryption open-source libraries.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

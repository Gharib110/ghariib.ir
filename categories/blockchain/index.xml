<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blockchain on Gharib Personal Blog</title>
    <link>https://ghariib.ir/categories/blockchain/</link>
    <description>Recent content in Blockchain on Gharib Personal Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Alireza Gharib. All right reserved</copyright>
    <lastBuildDate>Wed, 19 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ghariib.ir/categories/blockchain/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Celebrating our 2024 open-source contributions</title>
      <link>https://ghariib.ir/posts/celebrating-our-2024-open-source-contributions/</link>
      <pubDate>Wed, 19 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/celebrating-our-2024-open-source-contributions/</guid>
      <description>&lt;p&gt;While Trail of Bits is known for developing security tools like Slither, Medusa, and Fickling, our engineering efforts extend far beyond our own projects. Throughout 2024, our team has been deeply engaged with the broader security ecosystem, tackling challenges in open-source tools and infrastructure that security engineers rely on every day. This year, our engineers […]&lt;/p&gt;&#xA;&lt;p&gt;The post Celebrating our 2024 open-source contributions appeared first on Security Boulevard.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to prove false statements? (Part 2)</title>
      <link>https://ghariib.ir/posts/how-to-prove-false-statements-part-2/</link>
      <pubDate>Wed, 19 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/how-to-prove-false-statements-part-2/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the second part of a two three four-part series, which covers some recent results on “verifiable computation” and possible pitfalls that could occur there. This post won’t make much sense on its own, so I urge you to start with the first part.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;In the previous post we introduced a handful of concepts, including (1) the notion of “verifiable computation” proof systems (sometimes inaccurately called “ZK” by the Ethereum community), (2) hash functions, and (3) some ideal models that we use for our security proofs, and (4) the idea that these “ideal models” are bogus — and sometimes they can make us confident in schemes that are totally insecure in the real world.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to prove false statements? (Part 1)</title>
      <link>https://ghariib.ir/posts/how-to-prove-false-statements-part-1/</link>
      <pubDate>Thu, 06 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/how-to-prove-false-statements-part-1/</guid>
      <description>&lt;p&gt;&lt;em&gt;Trigger warning: incredibly wonky theoretical cryptography post (written by a non-theorist)!&lt;/em&gt; &lt;em&gt;Also, this will be in two parts. I plan to be back with some more thoughts on practical stuff, like cloud backup, in the near future.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’ve read my blog over the years, you should understand that I have basically two obsessions. One is my interest in building “practical” schemes that solve real problems that come up in the real world. The other is a weird fixation on the theoretical models that underpin (the security of) many of those same schemes. In particular, one of my favorite bugaboos is a particular model, or “heuristic”, called the random oracle model (ROM) — essentially a fancy way to think about hash functions.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

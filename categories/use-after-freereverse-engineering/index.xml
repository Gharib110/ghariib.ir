<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Use-After-Free,reverse Engineering on Gharib Personal Blog</title>
    <link>https://ghariib.ir/categories/use-after-freereverse-engineering/</link>
    <description>Recent content in Use-After-Free,reverse Engineering on Gharib Personal Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Alireza Gharib. All right reserved</copyright>
    <lastBuildDate>Thu, 07 Jul 2011 13:00:00 -0400</lastBuildDate>
    <atom:link href="https://ghariib.ir/categories/use-after-freereverse-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Post-mortem Analysis of a Use-After-Free Vulnerability CVE-2011-1260</title>
      <link>https://ghariib.ir/posts/2011-07-07-post-mortem-analysis-of-a-use-after-fre/</link>
      <pubDate>Thu, 07 Jul 2011 13:00:00 -0400</pubDate>
      <guid>https://ghariib.ir/posts/2011-07-07-post-mortem-analysis-of-a-use-after-fre/</guid>
      <description>Recently, I&amp;rsquo;ve been looking into the exploitation of use-after-free vulnerabilities. This class of bug is very application specific, but armed with just the right amount of knowledge these vulnerabilities can be exploited to bypass most modern OS exploit mitigations. After reading Nephi Johnson&amp;rsquo;s (@d0c_s4vage) excellent article[1] on exploiting an IE</description>
    </item>
  </channel>
</rss>

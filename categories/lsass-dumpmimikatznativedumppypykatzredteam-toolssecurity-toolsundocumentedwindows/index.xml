<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lsass Dump,mimikatz,NativeDump,Pypykatz,Redteam Tools,Security Tools,Undocumented,Windows on Gharib Personal Blog</title>
    <link>https://ghariib.ir/categories/lsass-dumpmimikatznativedumppypykatzredteam-toolssecurity-toolsundocumentedwindows/</link>
    <description>Recent content in Lsass Dump,mimikatz,NativeDump,Pypykatz,Redteam Tools,Security Tools,Undocumented,Windows on Gharib Personal Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Alireza Gharib. All right reserved</copyright>
    <lastBuildDate>Sun, 16 Jun 2024 13:16:00 -0400</lastBuildDate>
    <atom:link href="https://ghariib.ir/categories/lsass-dumpmimikatznativedumppypykatzredteam-toolssecurity-toolsundocumentedwindows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NativeDump - Dump Lsass Using Only Native APIs By Hand-Crafting Minidump Files Without MinidumpWriteDump</title>
      <link>https://ghariib.ir/posts/2024-06-16-nativedump---dump-lsass-using-only-nati/</link>
      <pubDate>Sun, 16 Jun 2024 13:16:00 -0400</pubDate>
      <guid>https://ghariib.ir/posts/2024-06-16-nativedump---dump-lsass-using-only-nati/</guid>
      <description>&lt;h1 id=&#34;nativedump---dump-lsass-using-only-native-apis-by-hand-crafting-minidump-files-without-minidumpwritedump&#34;&gt;NativeDump - Dump Lsass Using Only Native APIs By Hand-Crafting Minidump Files Without MinidumpWriteDump&lt;/h1&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;NativeDump allows to dump the lsass process using only NTAPIs generating a Minidump file with only the streams needed to be parsed by tools like Mimikatz or Pypykatz (SystemInfo, ModuleList and Memory64List Streams).&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blogger.googleusercontent.com/img/a/AVvXsEh11fh6aFNrHcYMfe0poV40nnVo76iyfvtZ186Tz0QHquUWBMmZWc8SBwB_t6QnDKvusgUVyFIQxgDbSeha7QyatSDeWuFqpsN8ZH5u0f6HrWTnGCh3p9XRtTGuWOd4agBGBQQ2sQRqNZ6is4Z1N_XhG68KS41meeBR4sOQwVk1IKgD0OpYEUkdrqABPMo&#34;&gt;&#xD;&#xA;&lt;figure&gt;&#xD;&#xA;  &lt;img src=&#34;https://blogger.googleusercontent.com/img/a/AVvXsEh11fh6aFNrHcYMfe0poV40nnVo76iyfvtZ186Tz0QHquUWBMmZWc8SBwB_t6QnDKvusgUVyFIQxgDbSeha7QyatSDeWuFqpsN8ZH5u0f6HrWTnGCh3p9XRtTGuWOd4agBGBQQ2sQRqNZ6is4Z1N_XhG68KS41meeBR4sOQwVk1IKgD0OpYEUkdrqABPMo=w640-h210&#34; alt=&#34;&#34; /&gt;&#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;NTOpenProcessToken and NtAdjustPrivilegeToken to get the &amp;ldquo;SeDebugPrivilege&amp;rdquo; privilege&lt;/li&gt;&#xA;&lt;li&gt;RtlGetVersion to get the Operating System version details (Major version, minor version and build number). This is necessary for the SystemInfo Stream&lt;/li&gt;&#xA;&lt;li&gt;NtQueryInformationProcess and NtReadVirtualMemory to get the lsasrv.dll address. This is the only module necessary for the ModuleList Stream&lt;/li&gt;&#xA;&lt;li&gt;NtOpenProcess to get a handle for the lsass process&lt;/li&gt;&#xA;&lt;li&gt;NtQueryVirtualMemory and NtReadVirtualMemory to loop through the memory regions and dump all possible ones. At the same time it populates the Memory64List Stream&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Usage:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Plugin on Gharib Personal Blog</title>
    <link>https://ghariib.ir/tags/plugin/</link>
    <description>Recent content in Plugin on Gharib Personal Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Alireza Gharib. All right reserved</copyright>
    <lastBuildDate>Wed, 22 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ghariib.ir/tags/plugin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating A Custom View for WebSocket in ZAP</title>
      <link>https://ghariib.ir/posts/creating-a-custom-view-for-websocket-in-zap/</link>
      <pubDate>Wed, 22 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/creating-a-custom-view-for-websocket-in-zap/</guid>
      <description>&lt;p&gt;&#xD;&#xA;&lt;figure&gt;&#xD;&#xA;  &lt;img src=&#34;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjbETbc1fXDey2o7NC3ZLEq1k5hZCqEoEpz4lzxWVtKG6ansPGEuxnVY7LV1Xm_5A3G8-jtvQgT16MtRSi-_y3AdyshZ_wi7yGDHzP8yn0a0iwo-k3z1JEDsPAHxie17ohTSnkf-uv-s1UD/s320/websocket-in-zap-image-feature%255B1%255D.png&#34; alt=&#34;&#34; /&gt;&#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;When we were looking at the interactions between the Outlook and the LinkedIn APIs, we encountered WebSocket communications that used some additional encoding. The encoding was nothing too complex, but it was uncommon. It turned out to be LZip compression. However, the inability to read the content of the requests with Burp, ZAP or Web developer consoles in real-time made it difficult to analyze the API.&lt;/p&gt;&#xA;&lt;p&gt;While our proxy of choice is usually Burp Suite, it did not allow us to extend WebSocket views. We turn ourselves to the open-source project Zed Attack Proxy. It reveals to be easily extendable for custom WebSocket tooling. In this blog post, we will explain how you can implement your own custom view to display complex WebSocket messages.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

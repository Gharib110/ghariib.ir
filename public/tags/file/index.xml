<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>File on Gharib Personal Blog</title>
    <link>https://ghariib.ir/tags/file/</link>
    <description>Recent content in File on Gharib Personal Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Alireza Gharib. All right reserved</copyright>
    <lastBuildDate>Thu, 23 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ghariib.ir/tags/file/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Modernizing legacy code with GitHub Copilot: Tips and examples</title>
      <link>https://ghariib.ir/posts/modernizing-legacy-code-with-github-copilot-tips-and-examples/</link>
      <pubDate>Thu, 23 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/modernizing-legacy-code-with-github-copilot-tips-and-examples/</guid>
      <description>&lt;p&gt;Learn how to modernize legacy code with GitHub Copilot with real-world examples.&lt;/p&gt;&#xA;&lt;p&gt;The post Modernizing legacy code with GitHub Copilot: Tips and examples appeared first on The GitHub Blog.&lt;/p&gt;&#xA;&lt;p&gt;Let’s talk about legacy code—you know, the code that’s old enough to drive and definitely old enough to haunt your dreams. Maybe it’s a sprawling COBOL system or an early version of C++ written back when “Y2K” was a serious concern. Now, decades later, you’re being asked to “look into it” and modernize it (while wondering if you need to send a note to that person who retired a few years ago and may know how this thing works).&lt;/p&gt;</description>
    </item>
    <item>
      <title>&lt;div&gt;CVE-2024-12854 - &#34;WordPress Garden Gnome Package Plugin Remote Code Execution File Upload Vulnerability&#34;&lt;/div&gt;</title>
      <link>https://ghariib.ir/posts/cve-2024-12854-wordpress-garden-gnome-package-plugin-remote-code-execution-file-upload-vulnerability/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/cve-2024-12854-wordpress-garden-gnome-package-plugin-remote-code-execution-file-upload-vulnerability/</guid>
      <description>&lt;p&gt;&lt;strong&gt;CVE ID :&lt;/strong&gt; CVE-2024-12854&lt;br&gt;&#xA;&lt;strong&gt;Published :&lt;/strong&gt; Jan. 8, 2025, 10:15 a.m. | 11 hours, 29 minutes ago&lt;br&gt;&#xA;&lt;strong&gt;Description :&lt;/strong&gt; The Garden Gnome Package plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the functionality that automatically extracts &amp;lsquo;ggpkg&amp;rsquo; files that have been uploaded in all versions up to, and including, 2.3.0. This makes it possible for authenticated attackers, with Author-level access and above, to upload arbitrary files on the affected site&amp;rsquo;s server which may make remote code execution possible.&lt;br&gt;&#xA;&lt;strong&gt;Severity:&lt;/strong&gt; 8.8 | HIGH&lt;br&gt;&#xA;Visit the link for more details, such as CVSS details, affected products, timeline, and more&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>&lt;div&gt;Midori Browser 11.5 Added Headless Mode &amp; New App Icon&lt;/div&gt;</title>
      <link>https://ghariib.ir/posts/midori-browser-11-5-added-headless-mode-new-app-icon/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/midori-browser-11-5-added-headless-mode-new-app-icon/</guid>
      <description>&lt;p&gt;&#xD;&#xA;&lt;figure&gt;&#xD;&#xA;  &lt;img src=&#34;https://ubuntuhandbook.org/wp-content/uploads/2025/01/midora-newicon-250x250.webp&#34; alt=&#34;&#34; /&gt;&#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Midori web browser announced new 11.5 release recently with some exciting new features.&lt;/p&gt;&#xA;&lt;p&gt;Midori was a popular lightweight web browser that was default in elementary OS and Bodhi Linux. It’s now a free open-source Firefox derived browser developed by Astian Foundation, and licensed under the Mozilla Public License (MPL).&lt;/p&gt;&#xA;&lt;p&gt;The browser released new 11.5 recently, changed its app icon from a green lizard to &lt;strong&gt;new flat design logo&lt;/strong&gt; that IMO feels better.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CVE-2024-12853 - WordPress Modula Image Gallery Remote File Upload Vulnerability</title>
      <link>https://ghariib.ir/posts/cve-2024-12853-wordpress-modula-image-gallery-remote-file-upload-vulnerability/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/cve-2024-12853-wordpress-modula-image-gallery-remote-file-upload-vulnerability/</guid>
      <description>&lt;p&gt;&lt;strong&gt;CVE ID :&lt;/strong&gt; CVE-2024-12853&lt;br&gt;&#xA;&lt;strong&gt;Published :&lt;/strong&gt; Jan. 8, 2025, 10:15 a.m. | 11 hours, 29 minutes ago&lt;br&gt;&#xA;&lt;strong&gt;Description :&lt;/strong&gt; The Modula Image Gallery plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the zip upload functionality in all versions up to, and including, 2.11.10. This makes it possible for authenticated attackers, with Author-level access and above, to upload arbitrary files on the affected site&amp;rsquo;s server which may make remote code execution possible.&lt;br&gt;&#xA;&lt;strong&gt;Severity:&lt;/strong&gt; 8.8 | HIGH&lt;br&gt;&#xA;Visit the link for more details, such as CVSS details, affected products, timeline, and more&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CVE-2024-13189 - ZeroWdd MyBlog Remote File Permission Bypass Vulnerability</title>
      <link>https://ghariib.ir/posts/cve-2024-13189-zerowdd-myblog-remote-file-permission-bypass-vulnerability/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/cve-2024-13189-zerowdd-myblog-remote-file-permission-bypass-vulnerability/</guid>
      <description>&lt;p&gt;&lt;strong&gt;CVE ID :&lt;/strong&gt; CVE-2024-13189&lt;br&gt;&#xA;&lt;strong&gt;Published :&lt;/strong&gt; Jan. 8, 2025, 8:15 p.m. | 1 hour, 28 minutes ago&lt;br&gt;&#xA;&lt;strong&gt;Description :&lt;/strong&gt; A vulnerability classified as critical has been found in ZeroWdd myblog 1.0. This affects an unknown part of the file src/main/java/com/wdd/myblog/config/MyBlogMvcConfig.java. The manipulation leads to permission issues. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.&lt;br&gt;&#xA;&lt;strong&gt;Severity:&lt;/strong&gt; 7.3 | HIGH&lt;br&gt;&#xA;Visit the link for more details, such as CVSS details, affected products, timeline, and more&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CVE-2024-13190 - ZeroWdd Myblog Xml Injection</title>
      <link>https://ghariib.ir/posts/cve-2024-13190-zerowdd-myblog-xml-injection/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/cve-2024-13190-zerowdd-myblog-xml-injection/</guid>
      <description>&lt;p&gt;&lt;strong&gt;CVE ID :&lt;/strong&gt; CVE-2024-13190&lt;br&gt;&#xA;&lt;strong&gt;Published :&lt;/strong&gt; Jan. 8, 2025, 9:15 p.m. | 29 minutes ago&lt;br&gt;&#xA;&lt;strong&gt;Description :&lt;/strong&gt; A vulnerability classified as critical was found in ZeroWdd myblog 1.0. This vulnerability affects unknown code of the file src/main/resources/mapper/BlogMapper.xml. The manipulation of the argument findBlogList/getTotalBlogs leads to xml injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.&lt;br&gt;&#xA;&lt;strong&gt;Severity:&lt;/strong&gt; 6.3 | MEDIUM&lt;br&gt;&#xA;Visit the link for more details, such as CVSS details, affected products, timeline, and more&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CVE-2024-51442 - Minidlna Command Injection Vulnerability</title>
      <link>https://ghariib.ir/posts/cve-2024-51442-minidlna-command-injection-vulnerability/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/cve-2024-51442-minidlna-command-injection-vulnerability/</guid>
      <description>&lt;p&gt;&lt;strong&gt;CVE ID :&lt;/strong&gt; CVE-2024-51442&lt;br&gt;&#xA;&lt;strong&gt;Published :&lt;/strong&gt; Jan. 8, 2025, 6:15 p.m. | 3 hours, 28 minutes ago&lt;br&gt;&#xA;&lt;strong&gt;Description :&lt;/strong&gt; Command Injection in Minidlna version v1.3.3 and before allows an attacker to execute arbitrary OS commands via a specially crafted minidlna.conf configuration file.&lt;br&gt;&#xA;&lt;strong&gt;Severity:&lt;/strong&gt; 8.8 | HIGH&lt;br&gt;&#xA;Visit the link for more details, such as CVSS details, affected products, timeline, and more&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Go to Source&lt;/p&gt;</description>
    </item>
    <item>
      <title>CVE-2025-22137 - Pingvin Share File Traversal</title>
      <link>https://ghariib.ir/posts/cve-2025-22137-pingvin-share-file-traversal/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/cve-2025-22137-pingvin-share-file-traversal/</guid>
      <description>&lt;p&gt;&lt;strong&gt;CVE ID :&lt;/strong&gt; CVE-2025-22137&lt;br&gt;&#xA;&lt;strong&gt;Published :&lt;/strong&gt; Jan. 8, 2025, 4:15 p.m. | 5 hours, 28 minutes ago&lt;br&gt;&#xA;&lt;strong&gt;Description :&lt;/strong&gt; Pingvin Share is a self-hosted file sharing platform and an alternative for WeTransfer. This vulnerability allows an authenticated or unauthenticated (if anonymous shares are allowed) user to overwrite arbitrary files on the server, including sensitive system files, via HTTP POST requests. The issue has been patched in version 1.4.0.&#xA;&lt;strong&gt;Severity:&lt;/strong&gt; 9.8 | CRITICAL&lt;br&gt;&#xA;Visit the link for more details, such as CVSS details, affected products, timeline, and more&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CVE-2025-22145 - Carbon PHP DateTime Remote File Include Vulnerability</title>
      <link>https://ghariib.ir/posts/cve-2025-22145-carbon-php-datetime-remote-file-include-vulnerability/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/cve-2025-22145-carbon-php-datetime-remote-file-include-vulnerability/</guid>
      <description>&lt;p&gt;&lt;strong&gt;CVE ID :&lt;/strong&gt; CVE-2025-22145&lt;br&gt;&#xA;&lt;strong&gt;Published :&lt;/strong&gt; Jan. 8, 2025, 9:15 p.m. | 29 minutes ago&lt;br&gt;&#xA;&lt;strong&gt;Description :&lt;/strong&gt; Carbon is an international PHP extension for DateTime. Application passing unsanitized user input to Carbon::setLocale are at risk of arbitrary file include, if the application allows users to upload files with .php extension in an folder that allows include or require to read it, then they are at risk of arbitrary code ran on their servers. This vulnerability is fixed in 3.8.4 and 2.72.6.&#xA;&lt;strong&gt;Severity:&lt;/strong&gt; 0.0 | NA&lt;br&gt;&#xA;Visit the link for more details, such as CVSS details, affected products, timeline, and more&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Downloading the same file 102&#43; times</title>
      <link>https://ghariib.ir/posts/downloading-the-same-file-102-times/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/downloading-the-same-file-102-times/</guid>
      <description>&lt;p&gt;Have YOU ever tried downloading the same file 102+ times in your favorite browser? Do you know what happens on the 102nd time? 🙃&lt;/p&gt;&#xA;&lt;p&gt;I do. The answer is &amp;hellip; it depends 😋 It varies between browsers and it’s a bit of a surprise.&lt;/p&gt;&#xA;&lt;p&gt;Before I show you the screenshots, let me first tell you a short story about how I ended up in the &lt;em&gt;“lets-download-this-file-102-times”&lt;/em&gt; rabbit hole so bear with me.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Here’s why Julia is THE language in scientific programming</title>
      <link>https://ghariib.ir/posts/heres-why-julia-is-the-language-in-scientific-programming/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/heres-why-julia-is-the-language-in-scientific-programming/</guid>
      <description>&lt;p&gt;One of the best things about working in quantum computing is being exposed to a whole new set of skills and tools. For those of us coming from the software engineering side, discovering the things our academic peers are using is an interesting experience. One of the best for me personally was coming across the Julia programming language, and learning why it has become the go-to language for serious scientific programming in some circles.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to use GitHub Copilot: What it can do and real-world examples</title>
      <link>https://ghariib.ir/posts/how-to-use-github-copilot-what-it-can-do-and-real-world-examples/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/how-to-use-github-copilot-what-it-can-do-and-real-world-examples/</guid>
      <description>&lt;p&gt;How Copilot can generate unit tests, refactor code, create documentation, perform multi-file edits, and much more.&lt;/p&gt;&#xA;&lt;p&gt;The post How to use GitHub Copilot: What it can do and real-world examples appeared first on The GitHub Blog.&lt;/p&gt;&#xA;&lt;p&gt;Since the free version of GitHub Copilot launched last month, you’ve asked lots of questions, like “Is it free for everyone?” (Yes!), “Can Copilot make changes to multiple files?” (Yes again!), “What’s the name of Copilot’s mascot?” (It doesn’t have a name…yet.), and most of all: “What can GitHub Copilot &lt;em&gt;actually&lt;/em&gt; do?”&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting Up Dual Compilation (SSR &#43; CSR) in ViteJS with vite-plugin-builder</title>
      <link>https://ghariib.ir/posts/setting-up-dual-compilation-ssr-csr-in-vitejs-with-vite-plugin-builder/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/setting-up-dual-compilation-ssr-csr-in-vitejs-with-vite-plugin-builder/</guid>
      <description>&lt;h1 id=&#34;using&#34;&gt;&lt;strong&gt;Using &lt;code&gt;vite-plugin-builder&lt;/code&gt; to Set Up an SSR and CSR Project in Vite&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;In this tutorial, I will show you how to create a project from scratch with &lt;strong&gt;Vite&lt;/strong&gt;, configure it to build both &lt;strong&gt;Server-Side Rendering (SSR)&lt;/strong&gt; and &lt;strong&gt;Client-Side Rendering (CSR)&lt;/strong&gt; using the &lt;strong&gt;&lt;code&gt;vite-plugin-builder&lt;/code&gt;&lt;/strong&gt; plugin, which simplifies the whole process with a single command.&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-is&#34;&gt;&lt;strong&gt;What is &lt;code&gt;vite-plugin-builder&lt;/code&gt;?&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;vite-plugin-builder&lt;/code&gt;&lt;/strong&gt; is a plugin for &lt;strong&gt;Vite&lt;/strong&gt; that simplifies the setup and compilation of applications requiring both &lt;strong&gt;SSR&lt;/strong&gt; and &lt;strong&gt;CSR&lt;/strong&gt; in a single project (dual build). With it, you can easily manage both server and client entry points, which is ideal for modern applications that need to process content both on the server and on the client.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

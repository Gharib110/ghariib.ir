<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>22054 on Gharib Personal Blog</title>
    <link>https://ghariib.ir/tags/22054/</link>
    <description>Recent content in 22054 on Gharib Personal Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Alireza Gharib. All right reserved</copyright>
    <lastBuildDate>Wed, 19 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ghariib.ir/tags/22054/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker Engine v28: Hardening Container Networking by Default</title>
      <link>https://ghariib.ir/posts/docker-engine-v28-hardening-container-networking-by-default/</link>
      <pubDate>Wed, 19 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/docker-engine-v28-hardening-container-networking-by-default/</guid>
      <description>&lt;p&gt;Docker simplifies containerization by removing runtime complexity and making app development seamless. With Docker Engine v28, we’re taking another step forward in security by ensuring containers aren’t unintentionally accessible from local networks. This update isn’t about fixing a single vulnerability — it’s about security hardening so your containers stay safe. &lt;/p&gt;&#xA;&lt;h2 id=&#34;what-happened&#34;&gt;What happened?&lt;/h2&gt;&#xA;&lt;p&gt;When you run a container on the default Docker “bridge” network, Docker sets up &lt;strong&gt;NAT (Network Address Translation)&lt;/strong&gt; rules using your system’s firewall (via iptables). For example, the following command forwards traffic from port 8080 on your host to port 80 in the container. &lt;/p&gt;</description>
    </item>
  </channel>
</rss>

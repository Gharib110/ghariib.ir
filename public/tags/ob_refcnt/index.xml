<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ob_refcnt on Gharib Personal Blog</title>
    <link>https://ghariib.ir/tags/ob_refcnt/</link>
    <description>Recent content in Ob_refcnt on Gharib Personal Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Alireza Gharib. All right reserved</copyright>
    <lastBuildDate>Sun, 19 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ghariib.ir/tags/ob_refcnt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding Python by breaking it - Lvl 2</title>
      <link>https://ghariib.ir/posts/understanding-python-by-breaking-it-lvl-2/</link>
      <pubDate>Sun, 19 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://ghariib.ir/posts/understanding-python-by-breaking-it-lvl-2/</guid>
      <description>&lt;p&gt;After my first article I kept playing with &lt;code&gt;ctypes&lt;/code&gt; and tried to see what fun things that could be possible with little modifications to the Python&amp;rsquo;s objects at runtime. The goal of this article is to explain how to &lt;strong&gt;get reliable native code execution as a simple Python objet&lt;/strong&gt;. By reliable I mean: that, if our payload respect certain rules, we can call it multiple times from the same Python code.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
